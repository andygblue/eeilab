apiVersion: eventstreams.ibm.com/v1beta2
kind: EventStreams
metadata:
  labels:
    backup.eventstreams.ibm.com/component: eventstreams
    event-enabled-insurance.eei.canvas: 'true'
  name: eeikafka
  namespace: eei
spec:
  adminApi: {}
  adminUI:
    authentication:
      - type: integrationKeycloak
  apicurioRegistry: {}
  collector: {}
  license:
    accept: true
    license: L-QYVA-B365MB
    use: CloudPakForIntegrationProduction
  restProducer: {}
  strimziOverrides:
    kafka:
      authorization:
        type: simple
      config:
        default.replication.factor: 1
        inter.broker.protocol.version: '3.8'
        log.cleaner.threads: 6
        min.insync.replicas: 2
        num.io.threads: 24
        num.network.threads: 9
        num.replica.fetchers: 1
        offsets.topic.replication.factor: 1
      listeners:
        - authentication:
            type: scram-sha-512
          name: external
          port: 9094
          tls: true
          type: route
        - authentication:
            type: tls
          name: tls
          port: 9093
          tls: true
          type: internal
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: kafka-metrics-config.yaml
            name: minimal-prod-metrics-config
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 2048Mi
        requests:
          cpu: 100m
          memory: 128Mi
      storage:
        class: block-storage
        size: 4Gi
        type: persistent-claim
    zookeeper:
      metricsConfig:
        type: jmxPrometheusExporter
        valueFrom:
          configMapKeyRef:
            key: zookeeper-metrics-config.yaml
            name: minimal-prod-metrics-config
      replicas: 1
      storage:
        class: block-storage
        size: 2Gi
        type: persistent-claim
  version: latest
